@use "../../styles/variables.scss" as *;

.explorer {
  display: flex;
  flex-direction: column;
  overflow-y: hidden;
  background: rgba(26, 26, 46, 0.6);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(0, 243, 255, 0.2);
  border-radius: 6px;
  padding: 1rem;

  &.desktop-only {
    @media all and not ($mobile) {
      display: flex;
    }
  }
}

button#explorer {
  background-color: transparent;
  border: none;
  text-align: left;
  cursor: pointer;
  padding: 0;
  color: var(--secondary);
  display: flex;
  align-items: center;
  margin-bottom: 0.75rem;

  & h2 {
    font-size: 0.9rem;
    display: inline-block;
    margin: 0;
    font-family: 'JetBrains Mono', monospace;
    color: var(--tertiary);
    text-shadow: 0 0 8px rgba(138, 43, 226, 0.4);
    letter-spacing: 0.1em;
    text-transform: uppercase;

    &::before {
      content: '📁 ';
      opacity: 0.8;
      font-size: 0.9em;
    }
  }

  & .fold {
    margin-left: 0.5rem;
    transition: transform 0.3s ease;
    opacity: 0.8;
    color: var(--secondary);
  }

  &.collapsed .fold {
    transform: rotateZ(-90deg);
  }
}

.folder-outer {
  display: grid;
  grid-template-rows: 0fr;
  transition: grid-template-rows 0.3s ease-in-out;
}

.folder-outer.open {
  grid-template-rows: 1fr;
}

.folder-outer > ul {
  overflow: hidden;
}

#explorer-content {
  list-style: none;
  overflow: hidden;
  overflow-y: auto;
  max-height: 100%;
  transition:
    max-height 0.35s ease,
    visibility 0s linear 0s;
  margin-top: 0.5rem;
  visibility: visible;

  &.collapsed {
    max-height: 0;
    transition:
      max-height 0.35s ease,
      visibility 0s linear 0.35s;
    visibility: hidden;
  }

  & ul {
    list-style: none;
    margin: 0.08rem 0;
    padding: 0;
    transition:
      max-height 0.35s ease,
      transform 0.35s ease,
      opacity 0.2s ease;
    & li > a {
      color: var(--darkgray);
      opacity: 0.8;
      pointer-events: all;
      font-size: 0.9rem;
      transition: all 0.3s ease;
      padding: 0.15rem 0;
      display: block;

      &::before {
        content: '▸ ';
        color: var(--secondary);
        opacity: 0.5;
        margin-right: 0.25rem;
      }

      &::after {
        display: none;
      }

      &:hover {
        color: var(--secondary) !important;
        opacity: 1;
        text-shadow: 0 0 6px rgba(0, 243, 255, 0.3);
        padding-left: 0.25rem;

        &::before {
          opacity: 1;
        }
      }
    }
  }
  > #explorer-ul {
    max-height: none;
  }
}

svg {
  pointer-events: all;

  & > polyline {
    pointer-events: none;
  }
}

.folder-container {
  flex-direction: row;
  display: flex;
  align-items: center;
  user-select: none;
  padding: 0.15rem 0;
  transition: all 0.3s ease;

  &:hover {
    padding-left: 0.25rem;
  }

  & div > a {
    color: var(--secondary);
    font-family: var(--headerFont);
    font-size: 0.9rem;
    font-weight: $semiBoldWeight;
    line-height: 1.5rem;
    display: inline-block;
    transition: all 0.3s ease;

    &::after {
      display: none;
    }
  }

  & div > a:hover {
    color: var(--tertiary);
    text-shadow: 0 0 8px rgba(138, 43, 226, 0.4);
  }

  & div > button {
    color: var(--secondary);
    background-color: transparent;
    border: none;
    text-align: left;
    cursor: pointer;
    padding-left: 0;
    padding-right: 0;
    display: flex;
    align-items: center;
    font-family: var(--headerFont);
    transition: all 0.3s ease;

    &:hover span {
      text-shadow: 0 0 6px rgba(0, 243, 255, 0.3);
    }

    & span {
      font-size: 0.9rem;
      display: inline-block;
      color: var(--secondary);
      font-weight: $semiBoldWeight;
      margin: 0;
      line-height: 1.5rem;
      pointer-events: none;
      transition: all 0.3s ease;
    }
  }
}

.folder-icon {
  margin-right: 5px;
  color: var(--secondary);
  cursor: pointer;
  transition: all 0.3s ease;
  backface-visibility: visible;
  filter: drop-shadow(0 0 2px rgba(0, 243, 255, 0.3));
}

li:has(> .folder-outer:not(.open)) > .folder-container > svg {
  transform: rotate(-90deg);
}

.folder-icon:hover {
  color: var(--tertiary);
  filter: drop-shadow(0 0 4px rgba(138, 43, 226, 0.5));
}

.no-background::after {
  background: none !important;
}

#explorer-end {
  // needs height so IntersectionObserver gets triggered
  height: 4px;
  // remove default margin from li
  margin: 0;
}
